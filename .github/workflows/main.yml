    name: Foodgram CI/CD

    on:
      push:
        branches: [ "main" ]

    jobs:
      backend_tests:
        runs-on: ubuntu-latest
        services:
          postgres:
            image: postgres:13.0-alpine
            env:
              POSTGRES_DB: db
              POSTGRES_USER: user
              POSTGRES_PASSWORD: password
            ports: ["5432:5432"]
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
        - name: Check out code
          uses: actions/checkout@v3
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: "3.11"
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r ./backend/requirements.txt
        - name: Run flake8
          run: |
            cd backend/
            flake8 .
        # Django tests можно будет добавить, когда вы их напишете

      build_and_push_backend:
        name: Push Backend Docker image to DockerHub
        runs-on: ubuntu-latest
        needs: backend_tests
        steps:
          - name: Check out the repo
            uses: actions/checkout@v3
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2
          - name: Login to Docker
            uses: docker/login-action@v2
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
          - name: Push backend to DockerHub
            uses: docker/build-push-action@v4
            with:
              context: ./backend/
              push: true
              tags: pavellagerev/foodgram_backend:latest

      deploy:
        runs-on: ubuntu-latest
        needs: build_and_push_backend
        steps:
          - name: Executing remote ssh commands to deploy
            uses: appleboy/ssh-action@master
            with:
              host: ${{ secrets.HOST }}
              username: ${{ secrets.USER }}
              key: ${{ secrets.SSH_KEY }}
              script: |
                cd foodgram
                git pull
                echo "${{ secrets.DOT_ENV }}" > ./infra/.env
                # Скачиваем ТОЛЬКО новый образ бэкенда
                sudo docker compose -f ./infra/docker-compose.yml pull backend
                # Перезапускаем контейнеры (если backend обновился, он будет пересоздан)
                sudo docker compose -f ./infra/docker-compose.yml up -d --remove-orphans
                # Выполняем миграции и статику
                sudo docker compose -f ./infra/docker-compose.yml exec backend python manage.py migrate
                sudo docker compose -f ./infra/docker-compose.yml exec backend python manage.py collectstatic --no-input
                sudo docker image prune -f
