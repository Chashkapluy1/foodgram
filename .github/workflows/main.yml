    name: Foodgram CI/CD Workflow

    on: [push]

    jobs:
      build_and_push_to_docker_hub:
        name: Push Docker images to DockerHub
        runs-on: ubuntu-latest
        steps:
          - name: Check out the repo
            uses: actions/checkout@v3

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2

          - name: Login to Docker
            uses: docker/login-action@v2
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}

          - name: Push backend to DockerHub
            uses: docker/build-push-action@v4
            with:
              context: ./backend/
              push: true
              tags: pavellagerev/foodgram_backend:latest

          - name: Push frontend to DockerHub
            uses: docker/build-push-action@v4
            with:
              context: ./frontend/
              push: true
              tags: pavellagerev/foodgram_frontend:latest

          - name: Push gateway to DockerHub
            uses: docker/build-push-action@v4
            with:
              context: .
              dockerfile: ./infra/Dockerfile.gateway
              push: true
              tags: pavellagerev/foodgram_gateway:latest

      deploy:
        runs-on: ubuntu-latest
        needs: build_and_push_to_docker_hub
        steps:
          - name: Executing remote ssh commands to deploy
            uses: appleboy/ssh-action@master
            with:
              host: ${{ secrets.HOST }}
              username: ${{ secrets.USER }}
              key: ${{ secrets.SSH_KEY }}
              script: |
                cd foodgram
                git pull
                echo "${{ secrets.DOT_ENV }}" > ./infra/.env
                sudo docker compose -f docker-compose.production.yml pull
                sudo docker compose -f docker-compose.production.yml up -d
                sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
                sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic --no-input
                sudo docker image prune -f