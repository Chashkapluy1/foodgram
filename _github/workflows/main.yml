    name: Foodgram Full CI/CD Workflow

    on: [push]

    jobs:
      tests_backend:
        runs-on: ubuntu-latest
        services:
          postgres:
            image: postgres:13.0-alpine
            env:
              POSTGRES_DB: foodgram_db
              POSTGRES_USER: foodgram_user
              POSTGRES_PASSWORD: foodgram_password
            ports: ["5432:5432"]
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
        - name: Check out code
          uses: actions/checkout@v3
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: "3.11"
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r ./backend/requirements.txt
        - name: Run Django tests
          env:
            POSTGRES_DB: foodgram_db
            POSTGRES_USER: foodgram_user
            POSTGRES_PASSWORD: foodgram_password
            DB_HOST: 127.0.0.1
            DB_PORT: 5432
            SECRET_KEY: 'ci-secret-key'
          run: |
            cd backend/
            python manage.py test

      build_and_push_to_docker_hub:
        name: Push Docker images to DockerHub
        runs-on: ubuntu-latest
        needs: tests_backend
        if: github.ref == 'refs/heads/main'
        steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push backend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend/
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
        - name: Push frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            dockerfile: ./frontend/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
        - name: Push gateway to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: .
            dockerfile: ./infra/Dockerfile.gateway
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest

      deploy:
        runs-on: ubuntu-latest
        needs: build_and_push_to_docker_hub
        if: github.ref == 'refs/heads/main'
        steps:
        - name: Executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.SSH_PASSPHRASE }}
            script: |
              cd foodgram
              git pull
              echo "${{ secrets.DOT_ENV }}" > ./infra/.env
              sudo docker compose -f docker-compose.production.yml pull
              sudo docker compose -f docker-compose.production.yml up -d
              sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
              sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic --no-input
              sudo docker compose -f docker-compose.production.yml exec backend python manage.py load_ingredients
              sudo docker image prune -f
