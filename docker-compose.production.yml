version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    networks:
      - foodgram_network

  backend:
    build: ./backend/
    restart: always
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    depends_on:
      - db
    env_file: ./.env
    networks:
      - foodgram_network
    command: gunicorn foodgram.wsgi:application --bind 0:8000

  frontend:
    build: ./frontend/
    # Этот контейнер будет запускаться только для копирования
    networks:
      - foodgram_network

  gateway:
    build:
      context: .
      dockerfile: ./infra/Dockerfile.gateway
    restart: always
    ports:
      - "8001:80"
    volumes:
      - static_volume:/staticfiles/
      - media_volume:/media/
    depends_on:
      - backend
    networks:
      - foodgram_network

volumes:
  pg_data:
  static_volume:
  media_volume:

networks:
  foodgram_network:
    driver: bridge
