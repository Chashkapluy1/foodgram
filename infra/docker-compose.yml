version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: foodgram-db
    volumes:
      - foodgram_db_data:/var/lib/postgresql/data/
    env_file: ./.env
    networks:
      - foodgram_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ../backend/
    container_name: foodgram-backend
    restart: always
    volumes:
      - static_data:/app/static/
      - media_data:/app/media/
      - ../data:/app/data:ro
    depends_on:
      db:
        condition: service_healthy
    env_file: ./.env
    networks:
      - foodgram_network

  gateway:
    # Указываем, что нужно собрать этот сервис
    build:
      context: ..
      # Указываем путь к Dockerfile
      dockerfile: infra/Dockerfile.gateway
    container_name: foodgram-gateway
    ports:
      - "8088:80"
    volumes:
      # Пробрасываем только статику и медиа от Django
      - static_data:/var/html/static/
      - media_data:/var/html/media/
    depends_on:
      - backend
    networks:
      - foodgram_network

volumes:
  foodgram_db_data:
  static_data:
  media_data:

networks:
  foodgram_network:
    driver: bridge
