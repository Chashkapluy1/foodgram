version: '3.8'

services:
  # Сервис базы данных PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: foodgram-db
    volumes:
      - foodgram_db_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    networks:
      - foodgram_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Сервис нашего Django-бэкенда
  backend:
    build: ../backend/
    container_name: foodgram-backend
    restart: always
    volumes:
      - static_data:/app/static/
      - media_data:/app/media/
    depends_on:
      db:
        condition: service_healthy # Запускаемся только после того, как БД будет готова
    env_file:
      - ./.env
    networks:
      - foodgram_network

  # Сервис для сборки фронтенда (запускается один раз)
  frontend:
    build: ../frontend/
    container_name: foodgram-frontend
    volumes:
      - frontend_build:/app/result_build
    networks:
      - foodgram_network

  # Сервис веб-сервера Nginx (шлюз)
  gateway:
    image: nginx:1.25-alpine
    container_name: foodgram-gateway
    ports:
      - "8088:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend_build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_data:/var/html/static/
      - media_data:/var/html/media/
    depends_on:
      - backend
      - frontend
    networks:
      - foodgram_network

# Именованные volumes для сохранения данных
volumes:
  foodgram_db_data:
  static_data:
  media_data:
  frontend_build:

# Изолированная сеть для проекта
networks:
  foodgram_network:
    driver: bridge
